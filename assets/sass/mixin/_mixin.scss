@mixin border-radius($radius) {
	border-radius: $radius;
}

@mixin transition($duration: .3s){
	transition: $duration;
}

@mixin background-content($repeat: no-repeat, $size: cover, $position: center center) {
	background-repeat: $repeat;
	background-size: $size;
	background-position: $position;
}

@mixin background-color($color) {
	background-color: $color;
}

@mixin overlay($opacity: $opacity) {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	opacity: $opacity;
	z-index: 0;
}

@mixin width($width) {
	width: $width;
}

@mixin equal-size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin height-lh($height, $lineheight: $height) {
  height: $height;
	line-height: $lineheight;
}

@mixin equal-size-lineHeight($width, $height: $width, $Lheight: $width) {
	width: $width;
	height: $height;
	line-height: $Lheight;
}

@mixin flex-position($display, $contet, $items) {
	display: $display;
	justify-content: $contet;
	align-items: $items;
}

@mixin position($position) {
	position: $position;
}

@mixin center-position($top: $top, $left: $top) {
  position: absolute;
	top: $top;
	left: $top;
	transform: translate(-#{$top}, -#{$top});
}

@mixin inputPlaceholder() {
	$selector: '';
	$prefixes: (
			moz: "::-moz",
			webkit: "::-webkit",
			ie: ":-ms"
	);
	@each $prop, $value in $prefixes {
			@if $prop != "moz" {
					$selector: #{$value}-input-placeholder;
			} @else {
					$selector: #{$value}-placeholder;
			}
			@if & {
					&#{$selector} {
							@content;
					}
			} @else {
					#{$selector} {
							@content;
					}
			}
	}
	&::placeholder {
		@content;
	}
}